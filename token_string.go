// Code generated by "stringer -type Token -trimprefix Token"; DO NOT EDIT.

package jsondsl

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenInvalid-0]
	_ = x[TokenColon-1]
	_ = x[TokenComma-2]
	_ = x[TokenLParen-3]
	_ = x[TokenRParen-4]
	_ = x[TokenLBrace-5]
	_ = x[TokenRBrace-6]
	_ = x[TokenLBrack-7]
	_ = x[TokenRBrack-8]
	_ = x[TokenNull-9]
	_ = x[TokenFalse-10]
	_ = x[TokenTrue-11]
	_ = x[TokenNumber-12]
	_ = x[TokenIdent-13]
	_ = x[TokenString-14]
}

const _Token_name = "InvalidColonCommaLParenRParenLBraceRBraceLBrackRBrackNullFalseTrueNumberIdentString"

var _Token_index = [...]uint8{0, 7, 12, 17, 23, 29, 35, 41, 47, 53, 57, 62, 66, 72, 77, 83}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
